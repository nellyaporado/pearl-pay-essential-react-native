{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nvar _jsxFileName = \"/Users/nellyaporado/Desktop/pearl-pay-essential-react-native/src/screens/Wallets.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Screen from \"../components/Screen\";\nimport Carousel from \"../components/Carousel/Carousel\";\nimport Wallet from \"../components/Wallet/Wallet\";\nimport UserBanner from \"../components/UserBanner\";\nimport LoadingIndicator from \"../components/LoadingIndicator\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { getWallets, getTransaction } from \"../services\";\nvar walletMock = [{\n  balance: 1324.56,\n  label: 'Mock wallet label',\n  lastTransaction: {\n    type: 'income',\n    value: 1500,\n    label: 'Mock transaction label'\n  }\n}];\nvar initialState = {\n  data: [],\n  loading: false,\n  error: null\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'start':\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case 'success':\n      return _objectSpread({}, state, {\n        loading: false,\n        data: action.data\n      });\n\n    case 'failure':\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.error\n      });\n\n    default:\n      throw new Error();\n  }\n}\n\nexport default function Wallets() {\n  var _React$useReducer = React.useReducer(reducer, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      token = _React$useContext.token,\n      username = _React$useContext.username,\n      onLogout = _React$useContext.onLogout;\n\n  React.useEffect(function () {\n    function fetchData() {\n      var response, completeData, data;\n      return _regeneratorRuntime.async(function fetchData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: 'start'\n              });\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(getWallets({\n                token: token\n              }));\n\n            case 4:\n              response = _context2.sent;\n              completeData = response.data.map(function _callee(wallet) {\n                var response;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(getTransaction({\n                          token: token,\n                          transactionId: wallet.lastTransactionId\n                        }));\n\n                      case 2:\n                        response = _context.sent;\n                        return _context.abrupt(\"return\", _objectSpread({}, wallet, {\n                          lastTransaction: response.data\n                        }));\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                });\n              });\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(Promise.all(completeData));\n\n            case 8:\n              data = _context2.sent;\n              dispatch({\n                type: 'success',\n                data: data\n              });\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: 'failure',\n                error: _context2.t0\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 12]]);\n    }\n\n    fetchData();\n  }, []);\n  return React.createElement(Screen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    }\n  }, React.createElement(UserBanner, {\n    userName: username || 'Mock username',\n    onLogout: onLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    }\n  }), React.createElement(Carousel, {\n    data: state.data.length > 0 ? state.data : walletMock,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(Wallet, _extends({\n        index: index\n      }, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 45\n  }\n});","map":{"version":3,"sources":["/Users/nellyaporado/Desktop/pearl-pay-essential-react-native/src/screens/Wallets.js"],"names":["React","LinearGradient","Screen","Carousel","Wallet","UserBanner","LoadingIndicator","AuthContext","getWallets","getTransaction","walletMock","balance","label","lastTransaction","type","value","initialState","data","loading","error","reducer","state","action","Error","Wallets","useReducer","dispatch","useContext","token","username","onLogout","useEffect","fetchData","response","completeData","map","wallet","transactionId","lastTransactionId","Promise","all","length","item","index","id","styles","StyleSheet","create","title","fontSize"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, SafeAreaView, TouchableOpacity } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Screen from '../components/Screen';\nimport Carousel from '../components/Carousel/Carousel';\nimport Wallet from '../components/Wallet/Wallet';\nimport UserBanner from '../components/UserBanner';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport { AuthContext } from '../context/AuthContext';\nimport { getWallets, getTransaction } from '../services';\n\nconst walletMock = [\n  {\n    balance: 1324.56,\n    label: 'Mock wallet label',\n    lastTransaction: {\n      type: 'income',\n      value: 1500,\n      label: 'Mock transaction label',\n    },\n  },\n];\n\nconst initialState = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'start':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'success':\n      return {\n        ...state,\n        loading: false,\n        data: action.data,\n      };\n    case 'failure':\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nexport default function Wallets() {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const { token, username, onLogout } = React.useContext(AuthContext);\n\n  React.useEffect(() => {\n    async function fetchData() {\n      try {\n        dispatch({ type: 'start' });\n\n        const response = await getWallets({ token });\n\n        const completeData = response.data.map(async wallet => {\n          const response = await getTransaction({\n            token,\n            transactionId: wallet.lastTransactionId,\n          });\n\n          return {\n            ...wallet,\n            lastTransaction: response.data,\n          };\n        });\n\n        const data = await Promise.all(completeData);\n\n        dispatch({ type: 'success', data });\n      } catch (error) {\n        dispatch({ type: 'failure', error });\n      }\n    }\n    fetchData();\n  }, []);\n  \n  return (\n    <Screen>\n      <UserBanner userName={username || 'Mock username'} onLogout={onLogout} />\n      <Carousel\n        data={state.data.length > 0 ? state.data : walletMock}\n        renderItem={({ item, index }) => <Wallet index={index} {...item} />}\n        keyExtractor={item => item.id}\n      />\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 45,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}