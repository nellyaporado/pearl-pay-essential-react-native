{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nellyaporado/Desktop/pearl-pay-essential-react-native/src/screens/PlannedPayments.js\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Constants from 'expo-constants';\nimport { RectButton } from 'react-native-gesture-handler';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport FAB from \"../components/FAB\";\nimport Card from \"../components/Card\";\nimport LoadingIndicator from \"../components/LoadingIndicator\";\nimport { PrimaryText } from \"../components/Typography\";\nimport { colors, fontSize, SPACING_VALUE } from \"../utils\";\nimport { getPayments, deletePayment, createPayment } from \"../services\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport PlannedPaymentItem from \"../components/PlannedPaymentItem\";\n\nvar showErrorAlert = function showErrorAlert() {\n  return Alert.alert('Ooops', 'Something went wrong. Please try again');\n};\n\nexport default function PlannedPayments(props) {\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      plans = _React$useState2[0],\n      setPlans = _React$useState2[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      token = _React$useContext.token;\n\n  useFocusEffect(React.useCallback(function () {\n    var params = props.route.params;\n\n    if (params) {\n      var value = params.value,\n          label = params.label,\n          type = params.type;\n\n      if (value && label && type) {\n        addPlan(value, label, type);\n        props.navigation.setParams({\n          value: undefined,\n          label: undefined,\n          type: undefined\n        });\n      }\n    }\n  }, [props.route.params]));\n  React.useEffect(function () {\n    if (token) {\n      getPlans();\n    }\n  }, [token]);\n\n  function getPlans() {\n    var response;\n    return _regeneratorRuntime.async(function getPlans$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getPayments({\n              token: token\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (!response.error) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert('Error!', 'Cannot load payment plans. Please try again'));\n\n          case 6:\n            setPlans(response.data);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", showErrorAlert());\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  }\n\n  function removePlan(paymentId) {\n    var response;\n    return _regeneratorRuntime.async(function removePlan$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(deletePayment({\n              token: token,\n              paymentId: paymentId\n            }));\n\n          case 3:\n            response = _context2.sent;\n\n            if (response.error) {\n              showErrorAlert();\n            }\n\n            setPlans(response.data);\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", showErrorAlert());\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]]);\n  }\n\n  function addPlan(value, label, type) {\n    var response;\n    return _regeneratorRuntime.async(function addPlan$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(createPayment({\n              token: token,\n              value: value,\n              label: label,\n              type: type\n            }));\n\n          case 3:\n            response = _context3.sent;\n\n            if (response.error) {\n              showErrorAlert();\n            }\n\n            setPlans(response.data);\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", showErrorAlert());\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 8]]);\n  }\n\n  function onFABPress() {\n    props.navigation.push('AddPaymentPlan');\n  }\n\n  function renderPlans() {\n    if (!plans) {\n      return React.createElement(LoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      });\n    } else if (plans.length === 0) {\n      return React.createElement(View, {\n        style: styles.noPlansPlaceholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        }\n      }, React.createElement(PrimaryText, {\n        style: styles.noPlansText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }, \"Currently you don't have any payment plans. Click plus button to add your first plan.\"));\n    } else if (plans.length > 0) {\n      return React.createElement(SectionList, {\n        sections: [{\n          title: 'OUTCOMES',\n          data: plans.filter(function (i) {\n            return i.type === 'outcome';\n          })\n        }, {\n          title: 'INCOMES',\n          data: plans.filter(function (i) {\n            return i.type === 'income';\n          })\n        }],\n        renderSectionHeader: function renderSectionHeader(_ref) {\n          var title = _ref.section.title;\n          return React.createElement(View, {\n            style: styles.sectionHeader,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            }\n          }, React.createElement(PrimaryText, {\n            style: styles.sectionTitle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            }\n          }, title));\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(PlannedPaymentItem, _extends({}, item, {\n            onRemove: function onRemove() {\n              return removePlan(item.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            }\n          }));\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        style: styles.sectionList,\n        stickySectionHeadersEnabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        }\n      });\n    }\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    }\n  }, renderPlans(), React.createElement(FAB, {\n    onPress: onFABPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight\n  },\n  noPlansPlaceholder: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: SPACING_VALUE\n  },\n  noPlansText: {\n    fontSize: fontSize.large,\n    textAlign: 'center'\n  },\n  sectionHeader: {\n    backgroundColor: colors.gray,\n    paddingVertical: SPACING_VALUE / 2,\n    alignItems: 'center'\n  },\n  sectionTitle: {\n    fontWeight: 'bold'\n  },\n  sectionList: {\n    flex: 1,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/Users/nellyaporado/Desktop/pearl-pay-essential-react-native/src/screens/PlannedPayments.js"],"names":["React","LinearGradient","Constants","RectButton","Icon","useFocusEffect","FAB","Card","LoadingIndicator","PrimaryText","colors","fontSize","SPACING_VALUE","getPayments","deletePayment","createPayment","AuthContext","PlannedPaymentItem","showErrorAlert","Alert","alert","PlannedPayments","props","useState","undefined","plans","setPlans","useContext","token","useCallback","params","route","value","label","type","addPlan","navigation","setParams","useEffect","getPlans","response","error","data","removePlan","paymentId","onFABPress","push","renderPlans","length","styles","noPlansPlaceholder","noPlansText","title","filter","i","section","sectionHeader","sectionTitle","item","id","sectionList","container","StyleSheet","create","flex","paddingTop","statusBarHeight","justifyContent","paddingHorizontal","large","textAlign","backgroundColor","gray","paddingVertical","alignItems","fontWeight","borderRadius"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  SafeAreaView,\n  AsyncStorage,\n  Alert,\n  View,\n  FlatList,\n  SectionList,\n} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Constants from 'expo-constants';\nimport { RectButton } from 'react-native-gesture-handler';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { useFocusEffect } from '@react-navigation/native';\n\nimport FAB from '../components/FAB';\nimport Card from '../components/Card';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport { PrimaryText } from '../components/Typography';\nimport { colors, fontSize, SPACING_VALUE } from '../utils';\nimport { getPayments, deletePayment, createPayment } from '../services';\nimport { AuthContext } from '../context/AuthContext';\nimport PlannedPaymentItem from '../components/PlannedPaymentItem';\n\nconst showErrorAlert = () =>\n  Alert.alert('Ooops', 'Something went wrong. Please try again');\n\nexport default function PlannedPayments(props) {\n  const [plans, setPlans] = React.useState(undefined);\n\n  const { token } = React.useContext(AuthContext);\n\n  useFocusEffect(\n    React.useCallback(() => {\n      const { params } = props.route;\n\n      if (params) {\n        // If params exists, get the value, label and type of new payment\n        const { value, label, type } = params;\n\n        if (value && label && type) {\n          // Create new payment\n          addPlan(value, label, type);\n\n          // Set params back to undefined to be able to check if new payment has to be added later on\n          props.navigation.setParams({\n            value: undefined,\n            label: undefined,\n            type: undefined,\n          });\n        }\n      }\n    }, [props.route.params]),\n  );\n\n  React.useEffect(() => {\n    if (token) {\n      getPlans();\n    }\n  }, [token]);\n\n  async function getPlans() {\n    try {\n      const response = await getPayments({ token });\n\n      if (response.error) {\n        return Alert.alert(\n          'Error!',\n          'Cannot load payment plans. Please try again',\n        );\n      }\n\n      setPlans(response.data);\n    } catch (error) {\n      return showErrorAlert();\n    }\n  }\n\n  async function removePlan(paymentId) {\n    try {\n      const response = await deletePayment({ token, paymentId });\n\n      if (response.error) {\n        showErrorAlert();\n      }\n\n      setPlans(response.data);\n    } catch (error) {\n      return showErrorAlert();\n    }\n  }\n\n  async function addPlan(value, label, type) {\n    try {\n      const response = await createPayment({ token, value, label, type });\n\n      if (response.error) {\n        showErrorAlert();\n      }\n\n      setPlans(response.data);\n    } catch (error) {\n      return showErrorAlert();\n    }\n  }\n\n  function onFABPress() {\n    props.navigation.push('AddPaymentPlan');\n  }\n\n  function renderPlans() {\n    if (!plans) {\n      return <LoadingIndicator />;\n    } else if (plans.length === 0) {\n      return (\n        <View style={styles.noPlansPlaceholder}>\n          <PrimaryText style={styles.noPlansText}>\n            Currently you don't have any payment plans. Click plus button to add\n            your first plan.\n          </PrimaryText>\n        </View>\n      );\n    } else if (plans.length > 0) {\n      return (\n        <SectionList\n          sections={[\n            {\n              title: 'OUTCOMES',\n              data: plans.filter((i) => i.type === 'outcome'),\n            },\n            {\n              title: 'INCOMES',\n              data: plans.filter((i) => i.type === 'income'),\n            },\n          ]}\n          renderSectionHeader={({ section: { title } }) => (\n            <View style={styles.sectionHeader}>\n              <PrimaryText style={styles.sectionTitle}>{title}</PrimaryText>\n            </View>\n          )}\n          renderItem={({ item }) => (\n            <PlannedPaymentItem\n              {...item}\n              onRemove={() => removePlan(item.id)}\n            />\n          )}\n          keyExtractor={(item) => item.id}\n          style={styles.sectionList}\n          stickySectionHeadersEnabled={true}\n        />\n      );\n    }\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {renderPlans()}\n      <FAB onPress={onFABPress} />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n  },\n  noPlansPlaceholder: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: SPACING_VALUE,\n  },\n  noPlansText: {\n    fontSize: fontSize.large,\n    textAlign: 'center',\n  },\n  sectionHeader: {\n    backgroundColor: colors.gray,\n    paddingVertical: SPACING_VALUE / 2,\n    alignItems: 'center',\n  },\n  sectionTitle: {\n    fontWeight: 'bold',\n  },\n  sectionList: {\n    flex: 1,\n    borderRadius: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}