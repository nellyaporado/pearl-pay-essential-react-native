{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nvar _jsxFileName = \"/Users/nellyaporado/Desktop/pearl-pay-essential-react-native/src/screens/AddPaymentPlan.js\";\nimport React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { Switch, ScrollView } from 'react-native-gesture-handler';\nimport { SPACING_VALUE, BUTTON_BORDER_RADIUS, iconSize, fontSize, colors } from \"../utils\";\nimport { PrimaryText } from \"../components/Typography\";\nvar initialState = {\n  label: '',\n  value: 0,\n  type: '',\n  processing: false\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'label_change':\n      return _objectSpread({}, state, {\n        label: action.payload\n      });\n\n    case 'value_change':\n      return _objectSpread({}, state, {\n        value: action.payload\n      });\n\n    case 'type_change':\n      return _objectSpread({}, state, {\n        type: action.payload\n      });\n\n    case 'add_plan_start':\n      return _objectSpread({}, state, {\n        processing: true\n      });\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction AppPaymentPlan(props) {\n  var _React$useReducer = React.useReducer(reducer, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  function onAddPress() {\n    var value, label, type, params;\n    return _regeneratorRuntime.async(function onAddPress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            value = state.value, label = state.label, type = state.type;\n            params = props.route.params;\n            dispatch({\n              type: 'add_plan_start'\n            });\n            props.navigation.navigate('PlannedPayments', {\n              value: value,\n              label: label,\n              type: type\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  var label = state.label,\n      value = state.value,\n      type = state.type;\n  var isDisabled = label.length < 3 || value < 0 || type === '';\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: styles.content,\n    behavior: \"padding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    }\n  }, React.createElement(ScrollView, {\n    keyboardDismissMode: \"on-drag\",\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    }\n  }, React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    }\n  }, React.createElement(Icon, {\n    name: \"label-outline\",\n    size: iconSize.regular,\n    color: colors.dark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Payment plan\",\n    onChangeText: function onChangeText(text) {\n      return dispatch({\n        type: 'label_change',\n        payload: text\n      });\n    },\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    }\n  })), React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    }\n  }, React.createElement(Icon, {\n    name: \"attach-money\",\n    size: iconSize.regular,\n    color: colors.dark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Amount\",\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return dispatch({\n        type: 'value_change',\n        payload: text\n      });\n    },\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      dispatch({\n        type: 'type_change',\n        payload: 'outcome'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    }\n  }, React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    }\n  }, React.createElement(Icon, {\n    name: state.type === 'outcome' ? 'radio-button-checked' : 'radio-button-unchecked',\n    size: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    }\n  }), React.createElement(PrimaryText, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    }\n  }, \"Outcome\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      dispatch({\n        type: 'type_change',\n        payload: 'income'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    }\n  }, React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    }\n  }, React.createElement(Icon, {\n    name: state.type === 'income' ? 'radio-button-checked' : 'radio-button-unchecked',\n    size: iconSize.regular,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    }\n  }), React.createElement(PrimaryText, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    }\n  }, \"Income\")))), React.createElement(TouchableOpacity, {\n    onPress: onAddPress,\n    style: [styles.button, {\n      backgroundColor: isDisabled ? colors.gray : colors.green\n    }],\n    disabled: isDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    }\n  }, state.processing ? React.createElement(ActivityIndicator, {\n    color: colors.white,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    }\n  }) : React.createElement(PrimaryText, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    }\n  }, \"ADD\")))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    flexGrow: 1,\n    justifyContent: 'space-between',\n    paddingHorizontal: SPACING_VALUE,\n    paddingBottom: SPACING_VALUE\n  },\n  label: {\n    fontSize: fontSize.large,\n    marginLeft: SPACING_VALUE,\n    width: '100%'\n  },\n  button: {\n    marginTop: 2 * SPACING_VALUE,\n    borderRadius: BUTTON_BORDER_RADIUS,\n    paddingVertical: SPACING_VALUE,\n    alignItems: 'center'\n  },\n  horizontalSpacing: {\n    paddingHorizontal: SPACING_VALUE\n  },\n  buttonText: {\n    fontSize: fontSize.large,\n    color: colors.white\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: SPACING_VALUE\n  }\n});\nexport default AppPaymentPlan;","map":{"version":3,"sources":["/Users/nellyaporado/Desktop/pearl-pay-essential-react-native/src/screens/AddPaymentPlan.js"],"names":["React","Icon","Switch","ScrollView","SPACING_VALUE","BUTTON_BORDER_RADIUS","iconSize","fontSize","colors","PrimaryText","initialState","label","value","type","processing","reducer","state","action","payload","Error","AppPaymentPlan","props","useReducer","dispatch","onAddPress","params","route","navigation","navigate","isDisabled","length","styles","container","content","contentContainer","rowContainer","regular","dark","text","button","backgroundColor","gray","green","white","buttonText","StyleSheet","create","flex","flexGrow","justifyContent","paddingHorizontal","paddingBottom","large","marginLeft","width","marginTop","borderRadius","paddingVertical","alignItems","horizontalSpacing","color","flexDirection","marginVertical"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;AAYA,OAAOC,IAAP;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,8BAAnC;AACA,SACEC,aADF,EAEEC,oBAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,MALF;AAOA,SAASC,WAAT;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,UAAU,EAAE;AAJO,CAArB;;AAOA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,cAAL;AACE,+BACKG,KADL;AAEEL,QAAAA,KAAK,EAAEM,MAAM,CAACC;AAFhB;;AAIF,SAAK,cAAL;AACE,+BACKF,KADL;AAEEJ,QAAAA,KAAK,EAAEK,MAAM,CAACC;AAFhB;;AAIF,SAAK,aAAL;AACE,+BACKF,KADL;AAEEH,QAAAA,IAAI,EAAEI,MAAM,CAACC;AAFf;;AAIF,SAAK,gBAAL;AACE,+BACKF,KADL;AAEEF,QAAAA,UAAU,EAAE;AAFd;;AAIF;AACE,YAAM,IAAIK,KAAJ,EAAN;AAtBJ;AAwBD;;AAED,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,0BACHrB,KAAK,CAACsB,UAAN,CAAiBP,OAAjB,EAA0BL,YAA1B,CADG;AAAA;AAAA,MACtBM,KADsB;AAAA,MACfO,QADe;;AAG7B,WAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUZ,YAAAA,KADV,GACiCI,KADjC,CACUJ,KADV,EACiBD,KADjB,GACiCK,KADjC,CACiBL,KADjB,EACwBE,IADxB,GACiCG,KADjC,CACwBH,IADxB;AAEUY,YAAAA,MAFV,GAEqBJ,KAAK,CAACK,KAF3B,CAEUD,MAFV;AAIEF,YAAAA,QAAQ,CAAC;AAAEV,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAR;AAEAQ,YAAAA,KAAK,CAACM,UAAN,CAAiBC,QAAjB,CAA0B,iBAA1B,EAA6C;AAAEhB,cAAAA,KAAK,EAALA,KAAF;AAASD,cAAAA,KAAK,EAALA,KAAT;AAAgBE,cAAAA,IAAI,EAAJA;AAAhB,aAA7C;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAH6B,MAYrBF,KAZqB,GAYEK,KAZF,CAYrBL,KAZqB;AAAA,MAYdC,KAZc,GAYEI,KAZF,CAYdJ,KAZc;AAAA,MAYPC,IAZO,GAYEG,KAZF,CAYPH,IAZO;AAc7B,MAAMgB,UAAU,GAAGlB,KAAK,CAACmB,MAAN,GAAe,CAAf,IAAoBlB,KAAK,GAAG,CAA5B,IAAiCC,IAAI,KAAK,EAA7D;AAEA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEkB,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAED,MAAM,CAACE,OAApC;AAA6C,IAAA,QAAQ,EAAC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,mBAAmB,EAAC,SADtB;AAEE,IAAA,yBAAyB,EAAC,SAF5B;AAGE,IAAA,qBAAqB,EAAEF,MAAM,CAACG,gBAHhC;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,IAAI,EAAE7B,QAAQ,CAAC8B,OAFjB;AAGE,IAAA,KAAK,EAAE5B,MAAM,CAAC6B,IAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aACZf,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAE,cAAR;AAAwBK,QAAAA,OAAO,EAAEoB;AAAjC,OAAD,CADI;AAAA,KAFhB;AAKE,IAAA,KAAK,EAAEP,MAAM,CAACpB,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,EAeE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoB,MAAM,CAACI,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,IAAI,EAAE7B,QAAQ,CAAC8B,OAFjB;AAGE,IAAA,KAAK,EAAE5B,MAAM,CAAC6B,IAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,YAAY,EAAC,SAFf;AAGE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aACZf,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAE,cAAR;AAAwBK,QAAAA,OAAO,EAAEoB;AAAjC,OAAD,CADI;AAAA,KAHhB;AAME,IAAA,KAAK,EAAEP,MAAM,CAACpB,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAfF,EA8BE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbY,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAE,aAAR;AAAuBK,QAAAA,OAAO,EAAE;AAAhC,OAAD,CAAR;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACI,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EACFnB,KAAK,CAACH,IAAN,KAAe,SAAf,GACI,sBADJ,GAEI,wBAJR;AAME,IAAA,IAAI,EAAE,EANR;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEkB,MAAM,CAACpB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CALF,CA9BF,EA+CE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbY,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAE,aAAR;AAAuBK,QAAAA,OAAO,EAAE;AAAhC,OAAD,CAAR;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACI,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EACFnB,KAAK,CAACH,IAAN,KAAe,QAAf,GACI,sBADJ,GAEI,wBAJR;AAME,IAAA,IAAI,EAAEP,QAAQ,CAAC8B,OANjB;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEL,MAAM,CAACpB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CALF,CA/CF,CALF,EAsEE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAEa,UADX;AAEE,IAAA,KAAK,EAAE,CACLO,MAAM,CAACQ,MADF,EAEL;AAAEC,MAAAA,eAAe,EAAEX,UAAU,GAAGrB,MAAM,CAACiC,IAAV,GAAiBjC,MAAM,CAACkC;AAArD,KAFK,CAFT;AAME,IAAA,QAAQ,EAAEb,UANZ;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGb,KAAK,CAACF,UAAN,GACC,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEN,MAAM,CAACmC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEZ,MAAM,CAACa,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,WAXJ,CAtEF,CADF,CADF,CADF;AA2FD;;AAED,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/Bb,EAAAA,gBAAgB,EAAE;AAChBc,IAAAA,QAAQ,EAAE,CADM;AAEhBC,IAAAA,cAAc,EAAE,eAFA;AAGhBC,IAAAA,iBAAiB,EAAE9C,aAHH;AAIhB+C,IAAAA,aAAa,EAAE/C;AAJC,GAJa;AAU/BO,EAAAA,KAAK,EAAE;AACLJ,IAAAA,QAAQ,EAAEA,QAAQ,CAAC6C,KADd;AAELC,IAAAA,UAAU,EAAEjD,aAFP;AAGLkD,IAAAA,KAAK,EAAE;AAHF,GAVwB;AAe/Bf,EAAAA,MAAM,EAAE;AACNgB,IAAAA,SAAS,EAAE,IAAInD,aADT;AAENoD,IAAAA,YAAY,EAAEnD,oBAFR;AAGNoD,IAAAA,eAAe,EAAErD,aAHX;AAINsD,IAAAA,UAAU,EAAE;AAJN,GAfuB;AAqB/BC,EAAAA,iBAAiB,EAAE;AACjBT,IAAAA,iBAAiB,EAAE9C;AADF,GArBY;AAwB/BwC,EAAAA,UAAU,EAAE;AACVrC,IAAAA,QAAQ,EAAEA,QAAQ,CAAC6C,KADT;AAEVQ,IAAAA,KAAK,EAAEpD,MAAM,CAACmC;AAFJ,GAxBmB;AA4B/BR,EAAAA,YAAY,EAAE;AACZ0B,IAAAA,aAAa,EAAE,KADH;AAEZH,IAAAA,UAAU,EAAE,QAFA;AAGZI,IAAAA,cAAc,EAAE1D;AAHJ;AA5BiB,CAAlB,CAAf;AAmCA,eAAegB,cAAf","sourcesContent":["import React from 'react';\nimport {\n  Alert,\n  AsyncStorage,\n  View,\n  SafeAreaView,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  ActivityIndicator,\n  KeyboardAvoidingView,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { Switch, ScrollView } from 'react-native-gesture-handler';\nimport {\n  SPACING_VALUE,\n  BUTTON_BORDER_RADIUS,\n  iconSize,\n  fontSize,\n  colors,\n} from '../utils';\nimport { PrimaryText } from '../components/Typography';\n\nconst initialState = {\n  label: '',\n  value: 0,\n  type: '',\n  processing: false,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'label_change':\n      return {\n        ...state,\n        label: action.payload,\n      };\n    case 'value_change':\n      return {\n        ...state,\n        value: action.payload,\n      };\n    case 'type_change':\n      return {\n        ...state,\n        type: action.payload,\n      };\n    case 'add_plan_start':\n      return {\n        ...state,\n        processing: true,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nfunction AppPaymentPlan(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  async function onAddPress() {\n    const { value, label, type } = state;\n    const { params } = props.route;\n\n    dispatch({ type: 'add_plan_start' });\n\n    props.navigation.navigate('PlannedPayments', { value, label, type });\n  }\n\n  const { label, value, type } = state;\n\n  const isDisabled = label.length < 3 || value < 0 || type === '';\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.content} behavior=\"padding\">\n        <ScrollView\n          keyboardDismissMode=\"on-drag\"\n          keyboardShouldPersistTaps=\"handled\"\n          contentContainerStyle={styles.contentContainer}\n        >\n          <View>\n            <View style={styles.rowContainer}>\n              <Icon\n                name=\"label-outline\"\n                size={iconSize.regular}\n                color={colors.dark}\n              />\n              <TextInput\n                placeholder=\"Payment plan\"\n                onChangeText={(text) =>\n                  dispatch({ type: 'label_change', payload: text })\n                }\n                style={styles.label}\n              />\n            </View>\n            <View style={styles.rowContainer}>\n              <Icon\n                name=\"attach-money\"\n                size={iconSize.regular}\n                color={colors.dark}\n              />\n              <TextInput\n                placeholder=\"Amount\"\n                keyboardType=\"numeric\"\n                onChangeText={(text) =>\n                  dispatch({ type: 'value_change', payload: text })\n                }\n                style={styles.label}\n              />\n            </View>\n            <TouchableOpacity\n              onPress={() => {\n                dispatch({ type: 'type_change', payload: 'outcome' });\n              }}\n            >\n              <View style={styles.rowContainer}>\n                <Icon\n                  name={\n                    state.type === 'outcome'\n                      ? 'radio-button-checked'\n                      : 'radio-button-unchecked'\n                  }\n                  size={24}\n                />\n                <PrimaryText style={styles.label}>Outcome</PrimaryText>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                dispatch({ type: 'type_change', payload: 'income' });\n              }}\n            >\n              <View style={styles.rowContainer}>\n                <Icon\n                  name={\n                    state.type === 'income'\n                      ? 'radio-button-checked'\n                      : 'radio-button-unchecked'\n                  }\n                  size={iconSize.regular}\n                />\n                <PrimaryText style={styles.label}>Income</PrimaryText>\n              </View>\n            </TouchableOpacity>\n          </View>\n          <TouchableOpacity\n            onPress={onAddPress}\n            style={[\n              styles.button,\n              { backgroundColor: isDisabled ? colors.gray : colors.green },\n            ]}\n            disabled={isDisabled}\n          >\n            {state.processing ? (\n              <ActivityIndicator color={colors.white} />\n            ) : (\n              <PrimaryText style={styles.buttonText}>ADD</PrimaryText>\n            )}\n          </TouchableOpacity>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flexGrow: 1,\n    justifyContent: 'space-between',\n    paddingHorizontal: SPACING_VALUE,\n    paddingBottom: SPACING_VALUE,\n  },\n  label: {\n    fontSize: fontSize.large,\n    marginLeft: SPACING_VALUE,\n    width: '100%',\n  },\n  button: {\n    marginTop: 2 * SPACING_VALUE,\n    borderRadius: BUTTON_BORDER_RADIUS,\n    paddingVertical: SPACING_VALUE,\n    alignItems: 'center',\n  },\n  horizontalSpacing: {\n    paddingHorizontal: SPACING_VALUE,\n  },\n  buttonText: {\n    fontSize: fontSize.large,\n    color: colors.white,\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: SPACING_VALUE,\n  },\n});\n\nexport default AppPaymentPlan;\n"]},"metadata":{},"sourceType":"module"}