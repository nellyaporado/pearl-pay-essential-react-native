{"ast":null,"code":"import * as SecureStore from 'expo-secure-store';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var setItemAsync = function setItemAsync(key, value) {\n  if (Platform.OS === 'web') {\n    return AsyncStorage.setItem(key, value);\n  } else {\n    return SecureStore.setItemAsync(key, value);\n  }\n};\nexport var getItemAsync = function getItemAsync(key) {\n  if (Platform.OS === 'web') {\n    return AsyncStorage.getItem(key);\n  } else {\n    return SecureStore.getItemAsync(key);\n  }\n};\nexport var deleteItemAsync = function deleteItemAsync(key) {\n  if (Platform.OS === 'web') {\n    return AsyncStorage.removeItem(key);\n  } else {\n    return SecureStore.deleteItemAsync(key);\n  }\n};","map":{"version":3,"sources":["/Users/nellyaporado/Desktop/pearl-pay-essential-react-native/src/abstractStorage.js"],"names":["SecureStore","setItemAsync","key","value","Platform","OS","AsyncStorage","setItem","getItemAsync","getItem","deleteItemAsync","removeItem"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;;;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAC1C,MAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,WAAOC,YAAY,CAACC,OAAb,CAAqBL,GAArB,EAA0BC,KAA1B,CAAP;AACD,GAFD,MAGK;AACH,WAAOH,WAAW,CAACC,YAAZ,CAAyBC,GAAzB,EAA8BC,KAA9B,CAAP;AACD;AACF,CAPM;AASP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACN,GAAD,EAAS;AACnC,MAAIE,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,WAAOC,YAAY,CAACG,OAAb,CAAqBP,GAArB,CAAP;AACD,GAFD,MAGK;AACH,WAAOF,WAAW,CAACQ,YAAZ,CAAyBN,GAAzB,CAAP;AACD;AACF,CAPM;AASP,OAAO,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACR,GAAD,EAAS;AACtC,MAAIE,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,WAAOC,YAAY,CAACK,UAAb,CAAwBT,GAAxB,CAAP;AACD,GAFD,MAGK;AACH,WAAOF,WAAW,CAACU,eAAZ,CAA4BR,GAA5B,CAAP;AACD;AACF,CAPM","sourcesContent":["import * as SecureStore from 'expo-secure-store';\nimport { AsyncStorage, Platform } from 'react-native';\n\nexport const setItemAsync = (key, value) => {\n  if (Platform.OS === 'web') {\n    return AsyncStorage.setItem(key, value)\n  }\n  else {\n    return SecureStore.setItemAsync(key, value)\n  }\n}\n\nexport const getItemAsync = (key) => {\n  if (Platform.OS === 'web') {\n    return AsyncStorage.getItem(key)\n  }\n  else {\n    return SecureStore.getItemAsync(key)\n  }\n}\n\nexport const deleteItemAsync = (key) => {\n  if (Platform.OS === 'web') {\n    return AsyncStorage.removeItem(key)\n  }\n  else {\n    return SecureStore.deleteItemAsync(key)\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}