{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nvar _jsxFileName = \"/Users/nellyaporado/Desktop/pearl-pay-essential-react-native/src/screens/History.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Transaction from \"../components/Transaction\";\nimport Separator from \"../components/Separator\";\nimport Screen from \"../components/Screen\";\nimport LoadingIndicator from \"../components/LoadingIndicator\";\nimport { getHistory } from \"../services\";\nimport { AuthContext } from \"../context/AuthContext\";\nvar initialState = {\n  loading: false,\n  error: null,\n  data: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'start_fetching':\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case 'success':\n      return _objectSpread({}, state, {\n        data: action.payload,\n        loading: false\n      });\n\n    case 'failure':\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.error\n      });\n\n    default:\n      throw new Error();\n  }\n}\n\nexport default function History() {\n  var _React$useReducer = React.useReducer(reducer, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      token = _React$useContext.token;\n\n  React.useEffect(function () {\n    function fetchHistory() {\n      var response;\n      return _regeneratorRuntime.async(function fetchHistory$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: 'start_fetching'\n              });\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(getHistory({\n                token: token\n              }));\n\n            case 4:\n              response = _context.sent;\n              dispatch({\n                type: 'success',\n                payload: response.data\n              });\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: 'failure',\n                error: _context.t0\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n\n    fetchHistory();\n  }, []);\n\n  if (state.loading) {\n    return React.createElement(LoadingIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      }\n    });\n  }\n\n  return React.createElement(Screen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    }\n  }, React.createElement(FlatList, {\n    data: state.data,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Transaction, _extends({}, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    ItemSeparatorComponent: Separator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/nellyaporado/Desktop/pearl-pay-essential-react-native/src/screens/History.js"],"names":["React","Transaction","Separator","Screen","LoadingIndicator","getHistory","AuthContext","initialState","loading","error","data","reducer","state","action","type","payload","Error","History","useReducer","dispatch","useContext","token","useEffect","fetchHistory","response","item","id"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAQA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,OAAOC,gBAAP;AACA,SAASC,UAAT;AACA,SAASC,WAAT;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;;AAMA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,+BACKF,KADL;AAEEJ,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAK,SAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAFf;AAGEP,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAK,SAAL;AACE,+BACKI,KADL;AAEEJ,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAHhB;;AAKF;AACE,YAAM,IAAIO,KAAJ,EAAN;AAnBJ;AAqBD;;AAED,eAAe,SAASC,OAAT,GAAmB;AAAA,0BACNjB,KAAK,CAACkB,UAAN,CAAiBP,OAAjB,EAA0BJ,YAA1B,CADM;AAAA;AAAA,MACzBK,KADyB;AAAA,MAClBO,QADkB;;AAAA,0BAGdnB,KAAK,CAACoB,UAAN,CAAiBd,WAAjB,CAHc;AAAA,MAGxBe,KAHwB,qBAGxBA,KAHwB;;AAKhCrB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,YAAM;AACpB,aAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIJ,cAAAA,QAAQ,CAAC;AAAEL,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAAR;AAFJ;AAAA,+CAI2BT,UAAU,CAAC;AAAEgB,gBAAAA,KAAK,EAALA;AAAF,eAAD,CAJrC;;AAAA;AAIUG,cAAAA,QAJV;AAMIL,cAAAA,QAAQ,CAAC;AAAEL,gBAAAA,IAAI,EAAE,SAAR;AAAmBC,gBAAAA,OAAO,EAAES,QAAQ,CAACd;AAArC,eAAD,CAAR;AANJ;AAAA;;AAAA;AAAA;AAAA;AAQIS,cAAAA,QAAQ,CAAC;AAAEL,gBAAAA,IAAI,EAAE,SAAR;AAAmBL,gBAAAA,KAAK;AAAxB,eAAD,CAAR;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYAc,IAAAA,YAAY;AACb,GAdD,EAcG,EAdH;;AAgBA,MAAIX,KAAK,CAACJ,OAAV,EAAmB;AACjB,WAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEI,KAAK,CAACF,IADd;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGe,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,WAAD,eAAiBA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAd;AAAA,KAFd;AAGE,IAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAf;AAAA,KAHhB;AAIE,IAAA,sBAAsB,EAAExB,SAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  SafeAreaView,\n  AsyncStorage,\n  FlatList,\n} from 'react-native';\nimport Transaction from '../components/Transaction';\nimport Separator from '../components/Separator';\nimport Screen from '../components/Screen';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport { getHistory } from '../services';\nimport { AuthContext } from '../context/AuthContext';\n\nconst initialState = {\n  loading: false,\n  error: null,\n  data: [],\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'start_fetching':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'success':\n      return {\n        ...state,\n        data: action.payload,\n        loading: false,\n      };\n    case 'failure':\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nexport default function History() {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const { token } = React.useContext(AuthContext);\n\n  React.useEffect(() => {\n    async function fetchHistory() {\n      try {\n        dispatch({ type: 'start_fetching' });\n\n        const response = await getHistory({ token });\n\n        dispatch({ type: 'success', payload: response.data });\n      } catch (error) {\n        dispatch({ type: 'failure', error });\n      }\n    }\n\n    fetchHistory();\n  }, []);\n\n  if (state.loading) {\n    return <LoadingIndicator />;\n  }\n\n  return (\n    <Screen>\n      <FlatList\n        data={state.data}\n        renderItem={({ item }) => <Transaction {...item} />}\n        keyExtractor={(item) => item.id}\n        ItemSeparatorComponent={Separator}\n      />\n    </Screen>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}