{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nellyaporado/Desktop/pearl-pay-essential-react-native/src/screens/Login.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { PrimaryText } from \"../components/Typography\";\nimport { colors, fontSize } from \"../utils\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { login } from \"../services\";\n\nfunction Login() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      username = _React$useState2[0],\n      setUsername = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      onLogin = _React$useContext.onLogin,\n      onLogout = _React$useContext.onLogout;\n\n  function signIn() {\n    var response;\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(login({\n              username: username,\n              password: password\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (!response.error) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert(response.message, 'Wrong username or password. Please try again'));\n\n          case 6:\n            onLogin({\n              token: response.token,\n              username: response.username\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", Alert.alert('Ooops', 'Something went wrong. Please try again'));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  }\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    keyboardDismissMode: \"on-drag\",\n    keyboardShouldPersistTaps: \"always\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: styles.content,\n    behavior: \"padding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/callstack-logo.png\"),\n    style: styles.logo,\n    resizeMode: \"contain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: setUsername,\n    style: styles.textInput,\n    placeholder: \"Username\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: setPassword,\n    style: styles.textInput,\n    placeholder: \"Password\",\n    autoCapitalize: \"none\",\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: signIn,\n    disabled: !username || !password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    }\n  }, React.createElement(PrimaryText, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    }\n  }, \"Login\"))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: colors.white\n  },\n  content: {\n    alignItems: 'center',\n    marginTop: -100\n  },\n  logo: {\n    width: 150,\n    marginBottom: 20\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.lightGray\n  },\n  textInput: {\n    fontSize: fontSize.large,\n    paddingVertical: 10,\n    width: '80%',\n    marginLeft: 16\n  },\n  button: {\n    marginTop: 32,\n    marginBottom: 20,\n    backgroundColor: colors.green,\n    borderRadius: 6,\n    paddingVertical: 16,\n    paddingHorizontal: '40%'\n  },\n  buttonText: {\n    fontSize: fontSize.large,\n    color: colors.white\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/Users/nellyaporado/Desktop/pearl-pay-essential-react-native/src/screens/Login.js"],"names":["React","PrimaryText","colors","fontSize","AuthContext","login","Login","useState","username","setUsername","password","setPassword","useContext","onLogin","onLogout","signIn","response","error","Alert","alert","message","token","styles","container","content","require","logo","inputContainer","textInput","button","buttonText","StyleSheet","create","flex","justifyContent","backgroundColor","white","alignItems","marginTop","width","marginBottom","flexDirection","borderBottomWidth","borderBottomColor","lightGray","large","paddingVertical","marginLeft","green","borderRadius","paddingHorizontal","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  AsyncStorage,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Alert,\n  ScrollView,\n  Image,\n  KeyboardAvoidingView,\n} from 'react-native';\nimport { PrimaryText } from '../components/Typography';\nimport { colors, fontSize } from '../utils';\nimport { AuthContext } from '../context/AuthContext';\nimport { login } from '../services';\n\nfunction Login() {\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const { onLogin, onLogout } = React.useContext(AuthContext);\n\n  async function signIn() {\n    try {\n      let response = await login({ username, password });\n\n      if (response.error) {\n        return Alert.alert(\n          response.message,\n          'Wrong username or password. Please try again',\n        );\n      }\n\n      onLogin({\n        token: response.token,\n        username: response.username,\n      });\n    } catch (error) {\n      return Alert.alert('Ooops', 'Something went wrong. Please try again');\n    }\n  }\n\n  return (\n    <ScrollView\n      contentContainerStyle={styles.container}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"always\"\n    >\n      <KeyboardAvoidingView style={styles.content} behavior=\"padding\">\n        <Image\n          source={require('../../assets/callstack-logo.png')}\n          style={styles.logo}\n          resizeMode=\"contain\"\n        />\n        <View style={styles.inputContainer}>\n          <TextInput\n            onChangeText={setUsername}\n            style={styles.textInput}\n            placeholder=\"Username\"\n            autoCapitalize=\"none\"\n          />\n        </View>\n        <View style={styles.inputContainer}>\n          <TextInput\n            onChangeText={setPassword}\n            style={styles.textInput}\n            placeholder=\"Password\"\n            autoCapitalize=\"none\"\n            secureTextEntry\n          />\n        </View>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={signIn}\n          disabled={!username || !password}\n        >\n          <PrimaryText style={styles.buttonText}>Login</PrimaryText>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: colors.white,\n  },\n  content: {\n    alignItems: 'center',\n    marginTop: -100,\n  },\n  logo: {\n    width: 150,\n    marginBottom: 20,\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.lightGray,\n  },\n  textInput: {\n    fontSize: fontSize.large,\n    paddingVertical: 10,\n    width: '80%',\n    marginLeft: 16,\n  },\n  button: {\n    marginTop: 32,\n    marginBottom: 20,\n    backgroundColor: colors.green,\n    borderRadius: 6,\n    paddingVertical: 16,\n    paddingHorizontal: '40%',\n  },\n  buttonText: {\n    fontSize: fontSize.large,\n    color: colors.white,\n  },\n});\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}